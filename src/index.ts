export default {
	async fetch(request: Request): Promise<Response> {
		const { method } = request;
		const url = new URL(request.url);
		console.log(method, url.toString());

		if (url.pathname.startsWith('/robots.txt')) {
			return new Response(['User-agent: *', 'Disallow: /'].join('\n'));
		}

		if (url.pathname.startsWith('/image/png')) {
			const { data, length } = base64Decode(pngBase64);

			return new Response(data, {
				headers: {
					'Content-Type': 'image/png',
					'Content-Length': length.toString(),
				},
			});
		}

		if (url.pathname.startsWith('/image/jpeg')) {
			const { data, length } = base64Decode(jpgBase64);
			console.log(length);

			return new Response(data, {
				headers: {
					'Content-Type': 'image/jpeg',
					'Content-Length': length.toString(),
				},
			});
		}

		if (url.pathname === '/html') {
			return new Response('<html><body><h1>Hello World</h1></body></html>', {
				headers: {
					'Content-Type': 'text/html',
				},
			});
		}

		if (url.pathname === '/json' || url.pathname === '/jsonp') {
			return Response.json({});
		}

		const headers = Object.fromEntries(request.headers);

		let form;
		try {
			const formData = await request.clone().formData();
			form = Object.fromEntries(formData);
		} catch (err) {
			// ignore
		}

		let json;
		try {
			json = await request.json();
		} catch (err) {
			// ignore
		}

		let args;
		if (url.searchParams) {
			args = Object.fromEntries(url.searchParams);
		}

		if (url.pathname === '/gzip') {
			return Response.json(
				{ gzipped: true, headers, url, method, form, json, args },
				{
					headers: {
						'Content-Type': 'application/json',
						'Content-Encoding': 'gzip',
					},
				}
			);
		}

		return Response.json({ headers, url, method, form, json, args });
	},
};

function base64Decode(data: string) {
	const decoded = atob(data);
	const length = decoded.length;
	const buf = new ArrayBuffer(length);
	const bufView = new Uint8Array(buf);

	for (var i = 0; i < length; i++) {
		bufView[i] = decoded.charCodeAt(i);
	}

	return {
		data: buf,
		length,
	};
}

const pngBase64 = `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`;
const jpgBase64 = ``;
